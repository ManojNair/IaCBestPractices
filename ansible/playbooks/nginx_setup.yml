---
- name: Install and Configure NGINX Web Server
  hosts: webservers
  become: yes
  gather_facts: yes
  
  vars:
    nginx_port: 80
    nginx_user: www-data
    site_name: "Terraform + Ansible Demo"
    
  pre_tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      tags: [packages]
    
    - name: Wait for automatic system updates to complete
      shell: while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do sleep 1; done
      tags: [packages]

  tasks:
    - name: Install NGINX
      apt:
        name: nginx
        state: present
      tags: [packages, nginx]
      notify: start nginx

    - name: Install additional packages
      apt:
        name:
          - curl
          - htop
          - tree
        state: present
      tags: [packages]

    - name: Create custom web directory
      file:
        path: /var/www/demo
        state: directory
        owner: "{{ nginx_user }}"
        group: "{{ nginx_user }}"
        mode: '0755'
      tags: [nginx, config]

    - name: Generate custom index.html
      template:
        src: ../templates/index.html.j2
        dest: /var/www/demo/index.html
        owner: "{{ nginx_user }}"
        group: "{{ nginx_user }}"
        mode: '0644'
      tags: [nginx, config]
      notify: reload nginx

    - name: Create NGINX site configuration
      template:
        src: ../templates/nginx_site.conf.j2
        dest: /etc/nginx/sites-available/demo
        backup: yes
      tags: [nginx, config]
      notify: reload nginx

    - name: Enable the site
      file:
        src: /etc/nginx/sites-available/demo
        dest: /etc/nginx/sites-enabled/demo
        state: link
      tags: [nginx, config]
      notify: reload nginx

    - name: Disable default NGINX site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      tags: [nginx, config]
      notify: reload nginx

    - name: Ensure NGINX is started and enabled
      systemd:
        name: nginx
        state: started
        enabled: yes
      tags: [nginx, service]

    - name: Configure firewall for HTTP
      ufw:
        rule: allow
        port: "{{ nginx_port }}"
        proto: tcp
      tags: [security, firewall]

  handlers:
    - name: start nginx
      systemd:
        name: nginx
        state: started

    - name: reload nginx
      systemd:
        name: nginx
        state: reloaded

    - name: restart nginx
      systemd:
        name: nginx
        state: restarted

  post_tasks:
    - name: Verify NGINX is responding
      uri:
        url: "http://{{ ansible_host }}/"
        method: GET
        status_code: 200
      delegate_to: localhost
      tags: [verification]

    - name: Display success message
      debug:
        msg:
          - "‚úÖ NGINX installation completed successfully!"
          - "üåê Website URL: http://{{ ansible_host }}/"
          - "üñ•Ô∏è  Server: {{ inventory_hostname }}"
          - "üìä OS: {{ ansible_distribution }} {{ ansible_distribution_version }}"
      tags: [verification]
